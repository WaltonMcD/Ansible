--- # Kubernetes Bootstrap for basic cluster with no services.
- name: Kubernetes Bootstrap
  hosts: cluster
  become: true
  gather_facts: true

  tasks:
  - name: Disable swap all nodes
    ansible.builtin.command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Set selinux to permissive
    ansible.posix.selinux:
      policy: targeted
      state: permissive

  - name: Install traffic control utility iproute-tc, yum-utils, device-mapper-persistent-data, lvm2
    ansible.builtin.dnf:
      name: "{{ item }}}"
      state: present
    loop:
      - iproute-tc
      - yum-utils
      - device-mapper-persistent-data
      - lvm2

  - name: Create modules configuration file
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/containerd.conf
      line: "{{ item }}"
      create: true
      mode: 0644
    loop:
      - overlay
      - br_netfilter

  - name: Load modules
    community.general.modprobe:
      name: "{{ item }}"
    loop:
      - overlay
      - br_netfilter

  - name: Configure systemctl parameters in /etc/sysctl.d/k8s.conf
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/k8s.conf
      line: "{{ item }}"
      create: true
      mode: 0644
    loop:
      - net.bridge.bridge-nf-call-iptables  = 1
      - net.ipv4.ip_forward                 = 1
      - net.bridge.bridge-nf-call-ip6tables = 1

  - name: Add Docker Repository
    ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    changed_when: false

  - name: Add kubernetes repo
    ansible.builtin.lineinfile:
      path: /etc/yum.repos.d/kubernetes.repo
      line: "{{ item }}"
    loop:
      - "[kubernetes]"
      - name=Kubernetes
      - baseurl=https://packages.cloud.google.com/dnfansible.builtin.dnf/repos/kubernetes-el7-x86_64
      - enabled=1
      - gpgcheck=1
      - repo_gpgcheck=1
      - gpgkey=https://packages.cloud.google.com/dnfansible.builtin.dnf/doc/rpm-package-key.gpg

  - name: Update and install containerd
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
      - update
      - containerd.io

  - name: Start and Enable containerd
    ansible.builtin.systemd:
      name: containerd
      state: started
      enabled: true

  - name: Install kubelet kubeadm kubectl
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
      - kubelet
      - kubeadm
      - kubectl

  - name: Start and Enable kubelet
    ansible.builtin.systemd:
      name: kubelet
      state: started
      enabled: true

  - name: Initialize Kubernetes cluster
    ansible.builtin.command: kubeadm init --pod-network-cidr=192.168.0.0/16
    when: ansible_hostname == 'master'

  - name: Create .kube directory
    ansible.builtin.file:
      path: $HOME/.kube
      state: directory
      mode: 0755
    when: ansible_hostname == 'master'

  - name: Copy kubeconfig to .kube directory
    ansible.builtin.copy:
      src: /etc/kubernetes/admin.conf
      dest: $HOME/.kube/config
      remote_src: true
      mode: 0755
    when: ansible_hostname == 'master'

  - name: Chown .kube directory
    ansible.builtin.file:
      path: $HOME/.kube
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: 0755
    when: ansible_hostname == 'master'

  - name: Deploy Calico network
    ansible.builtin.command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
    when: ansible_hostname == 'master'

  - name: Print join command for worker nodes
    ansible.builtin.command: kubeadm token create --print-join-command
    when: ansible_hostname == 'master'
    register: join_command

  - name: Connect worker nodes to cluster
    ansible.builtin.command: "{{ join_command.stdout }}"
    when: ansible_hostname != 'master'
